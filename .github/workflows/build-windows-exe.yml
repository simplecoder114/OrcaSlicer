name: Build Windows Installer

on:
  workflow_dispatch:
  push:
    branches: [main, release/*]
    paths:
      - 'src/**'
      - '**/CMakeLists.txt'
      - 'version.inc'

env:
  BOOST_VERSION: "1.78.0"
  WINDOWS_SDK_VERSION: "10.0.18362.0"

jobs:
  build_windows:
    name: Build Windows Installer
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      - name: Checkout v2.3.0
        uses: actions/checkout@v4
        with:
          repository: SoftFever/OrcaSlicer
          ref: v2.3.0
          path: orca-src

      - name: Install build tools
        run: |
          choco install -y ninja cmake git python --no-progress
          python -m pip install conan

      - name: Download Boost
        run: |
          $boostVersion = "$env:BOOST_VERSION".Replace('.', '_')
          $boostInstaller = "boost_${boostVersion}-msvc-14.3-64.exe"
          $url = "https://sourceforge.net/projects/boost/files/boost-binaries/$env:BOOST_VERSION/$boostInstaller/download"
          
          # 下载官方安装包
          Invoke-WebRequest -Uri $url -OutFile $boostInstaller
          
          # 静默安装到指定目录
          Start-Process -Wait -FilePath $boostInstaller -ArgumentList "/SILENT", "/DIR=C:\local\boost_$boostVersion"
          
          # 设置环境变量
          echo "BOOST_ROOT=C:\local\boost_$boostVersion" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
        env:
          BOOST_VERSION: ${{ env.BOOST_VERSION }}

      - name: Setup MSVC environment
        run: |
          $vsPath = &"${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe" `
            -latest `
            -products * `
            -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 `
            -property installationPath
          
          $vcvarsPath = Join-Path $vsPath "VC\Auxiliary\Build\vcvars64.bat"
          
          # 设置环境变量
          cmd.exe /c "call `"$vcvarsPath`" && set > env_vars.txt"
          Get-Content env_vars.txt | ForEach-Object { 
            if ($_ -match "^(.*?)=(.*)$") { 
              Write-Output "$($matches[1])=$($matches[2])" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append
            }
          }
          
          # 添加SDK版本
          echo "CMAKE_SYSTEM_VERSION=$env:WINDOWS_SDK_VERSION" | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8 -Append

      - name: Configure CMake
        working-directory: ./orca-src
        run: |
          cmake -B build -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_SYSTEM_VERSION=$env:CMAKE_SYSTEM_VERSION ^
            -DBOOST_ROOT="$env:BOOST_ROOT"

      - name: Build installer
        working-directory: ./orca-src
        run: cmake --build build --config Release --target package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: OrcaSlicer-Windows-Installer
          path: orca-src/build/*.exe
          retention-days: 7
