name: Build Windows Installer

on:
  workflow_dispatch:  # 手动触发
  push:
    tags: [v*]        # 标签触发

env:
  BOOST_VERSION: "1.78.0"           # 锁定Boost版本:cite[2]
  WINDOWS_SDK_VERSION: "10.0.18362.0" # 规避问题SDK:cite[2]:cite[5]

jobs:
  build_windows:
    runs-on: windows-latest
    timeout-minutes: 90

    steps:
      # 1. 检出代码（指定2.3.0标签）
      - name: Checkout v2.3.0
        uses: actions/checkout@v4
        with:
          repository: SoftFever/OrcaSlicer
          ref: v2.3.0  # 确保版本准确
          path: orca-src

      # 2. 强制初始化MSVC环境（关键修复）
      - name: Setup MSVC
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64
          sdk: ${{ env.WINDOWS_SDK_VERSION }}  # 显式指定SDK版本:cite[2]

      # 3. 安装锁定版本的Boost
      - name: Install Boost ${{ env.BOOST_VERSION }}
        run: |
          choco install -y boost-msvc-14.3 `
            --version=${{ env.BOOST_VERSION }} `
            --ignore-dependencies  # 跳过冲突依赖

      # 4. 配置CMake（强制指定SDK和Boost路径）
      - name: Configure CMake
        working-directory: ./orca-src
        run: |
          cmake -B build -G Ninja ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DCMAKE_SYSTEM_VERSION=${{ env.WINDOWS_SDK_VERSION }} ^  # 覆盖默认SDK:cite[5]
            -DBOOST_ROOT="C:/local/boost_1_78_0"  # 显式路径避免歧义

      # 5. 编译安装包
      - name: Build Installer
        working-directory: ./orca-src
        run: cmake --build build --config Release --target package

      # 6. 上传制品
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Windows-Installer
          path: orca-src/build/*.exe
